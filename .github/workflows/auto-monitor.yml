name: Auto Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # Run every 5 minutes
  workflow_dispatch:  # Allow manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Check application health
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /opt/isaacplay
            if ! docker-compose ps | grep -q "Up"; then
              echo "Application is down!"
              exit 1
            fi

      - name: Check disk space
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            df -h | grep -v "tmpfs" | awk '{print $5 " " $6}' | while read output;
            do
              usage=$(echo $output | awk '{print $1}' | cut -d'%' -f1)
              partition=$(echo $output | awk '{print $2}')
              if [ $usage -ge 90 ]; then
                echo "Disk space is running low on $partition"
                exit 1
              fi
            done

      - name: Check memory usage
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            free -m | awk 'NR==2{printf "Memory Usage: %s/%sMB (%.2f%%)\n", $3,$2,$3*100/$2 }'
            if [ $(free -m | awk 'NR==2{printf "%.0f", $3*100/$2 }') -ge 90 ]; then
              echo "Memory usage is high!"
              exit 1
            fi

      - name: Check CPU usage
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1"%"}'
            if [ $(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}') -ge 90 ]; then
              echo "CPU usage is high!"
              exit 1
            fi

      - name: Send notification
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ System Alert: Application Health Check Failed',
              body: 'The automated health check has detected issues with the application. Please check the logs and take appropriate action.'
            }); 